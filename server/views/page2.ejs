<style>
  body {
      font-family: Arial, sans-serif;
      height: 100vh;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: #f5f5f5;
  }

  .chat-container {
      background-color: white;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0px 0px 15px rgba(0,0,0,0.2);
      width: 80%;
      max-width: 500px;
  }

  #chat-box {
    width: 400px;
    height: 300px;
    border: 1px solid #ccc;
    padding: 10px;
    margin: 0 auto;
    overflow-y: auto;
    display: flex;
    flex-direction: column; /* Remove the 'reverse' */
    justify-content: flex-end; /* New messages at the bottom */
}


.current-user-message,
.other-user-message {
    margin: 5px 0;
    padding: 10px;
    border-radius: 15px;
    max-width: 250px; /* Limit the width */
    word-wrap: break-word; /* Allow long words to be broken and wrap onto the next line */
}


  #message-input {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;}

      .current-user-message {
        text-align: right;
        background-color: #DCF8C6;
        align-self: flex-end; /* Align to the right */
    }
    
    .other-user-message {
        text-align: left;
        background-color: #EDEDED;
        align-self: flex-start; /* Align to the left */
    }
</style>


<h1>Welcome to Page 2, <%= name %>!</h1>


<div class="chat-container">
  <div id="chat-box"></div>
  <input type="text" id="message-input">
  <button onclick="sendMessage()">Send</button>
  <input type="file" id="image-input" name="file">
  <button onclick="sendImage()">Send Image</button>
</div>



<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io.connect('http://localhost:3000');

    socket.on('receiveMessage', (message) => {
      const chatBox = document.getElementById('chat-box');
      const messageDiv = document.createElement('div');
      
      if (message.senderName === '<%= name %>') {
          messageDiv.classList.add('current-user-message');
      } else {
          messageDiv.classList.add('other-user-message');
      }
  
      if (message.body.startsWith('<img')) {
          messageDiv.innerHTML = `${message.senderName}: ${message.body}`;
      } else {
          messageDiv.textContent = `${message.senderName}: ${message.body}`;
      }
      
      chatBox.appendChild(messageDiv);
  });
  
    function sendMessage() {
        const input = document.getElementById('message-input');
        socket.emit('sendMessage', {
            senderName: '<%= name %>',
            body: input.value
        });
        input.value = '';
    }

    function sendImage() {
      const imageInput = document.getElementById('image-input');
      const formData = new FormData();
      formData.append('file', imageInput.files[0]);
      
      fetch('/upload', {
          method: 'POST',
          body: formData
      })
      .then(response => response.json())
      .then(data => {
          const imageUrl = data.imageUrl;
          socket.emit('sendMessage', {
              senderName: '<%= name %>',
              body: `<img src="${imageUrl}" alt="Image" width="200">`
          });
      });
  }
  
  
</script>
